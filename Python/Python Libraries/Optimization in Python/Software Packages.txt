1. https://scaron.info/blog/quadratic-programming-in-python.html (Summary of 6 packages)

2. Python using a number of available solvers: CVXOPT, CVXPY, Gurobi, MOSEK, qpOASES and quadprog.

3. CasAdi is another symbolic optimization toolbox which also python support.

Numerical: CVXOPT/qpOASES/quadprog (Matrix type) (Usually faster!)
Symbolic: CVXPY/Gurobi/MOSEK/CasADi/ACADOS(symbolic variables)

Optimization Speed: quadprog > CVXOPT > CVXPY

We can use ACADOS/CasADi with high level language (MATLAB and Python) to formulate the MPC/QP problems
then we can generate c-code from MATLAB/Python
then wrap this standalone C code in embeded systems or in c++ in ROS!

For the same example shown in the quadprog comparison website: 
Matlab (quadprog): 130 ms
Python (quadprog): 0.5 ms
Matlab (Casadi): 60 ms
Python (Casadi): 0.5 ms 
Havent tested Casadi in c++ yet; it seems that quadprog python is sufficient in our applications.
